definitions:
  dao.UpdateSite:
    properties:
      address:
        type: string
      all_open:
        description: 指针类型，可以确保使用Updates方法更新时，如果值为false时也能更新成功
        type: boolean
      callback_url:
        type: string
      certificate:
        type: string
      description:
        type: string
      entity_id:
        description: 指针类型，可以确保使用Updates方法更新时，如果值为空时也能更新成功
        type: string
      icon:
        type: string
      id:
        type: integer
      name:
        type: string
      sso:
        description: 指针类型，可以确保使用Updates方法更新时，如果值为false时也能更新成功
        type: boolean
      sso_type:
        type: integer
    type: object
  dao.UserCreate:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      user_from:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - phone_number
    - username
    type: object
  dao.UserPasswordUpdate:
    properties:
      id:
        type: integer
      password:
        type: string
      re_password:
        type: string
    required:
    - id
    - password
    - re_password
    type: object
  dao.UserUpdate:
    properties:
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      phone_number:
        type: string
    required:
    - id
    type: object
  service.CASAuthorize:
    properties:
      service:
        type: string
    required:
    - service
    type: object
  service.CASServiceValidate:
    properties:
      service:
        type: string
      ticket:
        type: string
    required:
    - service
    - ticket
    type: object
  service.GroupCreate:
    properties:
      is_role_group:
        default: false
        type: boolean
      name:
        type: string
    required:
    - name
    type: object
  service.GroupUpdate:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  service.GroupUpdatePermission:
    properties:
      id:
        type: integer
      menu_permissions:
        items:
          type: string
        type: array
      path_permissions:
        items:
          type: string
        type: array
    required:
    - id
    - menu_permissions
    - path_permissions
    type: object
  service.GroupUpdateUser:
    properties:
      id:
        type: integer
      users:
        items:
          type: integer
        type: array
    required:
    - id
    - users
    type: object
  service.MFAValidate:
    properties:
      client_id:
        description: OAuth2.0客户端：客户端ID
        type: string
      code:
        type: string
      redirect_uri:
        description: OAuth2.0客户端：重定向URL
        type: string
      response_type:
        description: OAuth2.0客户端：授权类型，固定值：code
        type: string
      scope:
        description: OAuth2.0客户端：申请权限范围
        type: string
      service:
        description: CAS3.0客户端：回调地址
        type: string
      state:
        description: OAuth2.0客户端：客户端状态码
        type: string
      token:
        type: string
      username:
        type: string
    required:
    - code
    - token
    - username
    type: object
  service.OAuthAuthorize:
    properties:
      client_id:
        type: string
      redirect_uri:
        type: string
      response_type:
        type: string
      scope:
        type: string
      state:
        type: string
    required:
    - client_id
    - response_type
    type: object
  service.ParseSPMetadata:
    properties:
      sp_metadata_url:
        type: string
    required:
    - sp_metadata_url
    type: object
  service.ResponseToken:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      scope:
        type: string
      token_type:
        type: string
    type: object
  service.ResponseUserinfo:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
      username:
        type: string
    type: object
  service.RestPassword:
    properties:
      code:
        type: string
      password:
        type: string
      phone_number:
        type: string
      re_password:
        type: string
      username:
        type: string
    required:
    - code
    - password
    - phone_number
    - re_password
    - username
    type: object
  service.SiteCreate:
    properties:
      address:
        type: string
      callback_url:
        type: string
      certificate:
        type: string
      description:
        type: string
      domain_id:
        type: string
      entity_id:
        type: string
      icon:
        type: string
      idp_name:
        type: string
      name:
        type: string
      redirect_url:
        type: string
      site_group_id:
        type: integer
      sso:
        type: boolean
      sso_type:
        type: integer
    required:
    - address
    - description
    - name
    - site_group_id
    - sso
    type: object
  service.SiteGroupCreate:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  service.SiteGroupUpdate:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  service.SiteUserUpdate:
    properties:
      id:
        type: integer
      users:
        items:
          type: integer
        type: array
    required:
    - id
    - users
    type: object
  service.Token:
    properties:
      client_id:
        type: string
      client_secret:
        type: string
      code:
        type: string
      grant_type:
        type: string
      redirect_uri:
        type: string
    type: object
  service.UserLogin:
    properties:
      SAMLRequest:
        description: SAML2客户端：SAMLRequest
        type: string
      client_id:
        description: OAuth2.0客户端：客户端ID
        type: string
      password:
        type: string
      redirect_uri:
        description: OAuth2.0客户端：重定向URL
        type: string
      response_type:
        description: OAuth2.0客户端：授权类型，固定值：code
        type: string
      scope:
        description: OAuth2.0客户端：申请权限范围
        type: string
      service:
        description: CAS3.0客户端：回调地址
        type: string
      state:
        description: OAuth2.0客户端：客户端状态码
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: 用户认证相关接口
      parameters:
      - description: 用户名密码
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/service.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "token": "用户令牌"}'
          schema:
            type: string
      summary: 登录
      tags:
      - 用户认证
  /api/auth/logout:
    post:
      description: 用户认证相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": nil}'
          schema:
            type: string
      summary: 注销
      tags:
      - 用户认证
  /api/v1/audit/login:
    get:
      description: 日志相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      - description: 用户名
        in: query
        name: username
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取用户登录列表
      tags:
      - 日志管理
  /api/v1/audit/sms:
    get:
      description: 日志相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      - description: 电话号码
        in: query
        name: receiver
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取短信发送列表
      tags:
      - 日志管理
  /api/v1/group:
    post:
      consumes:
      - application/json
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/service.GroupCreate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "msg": "创建成功", "data": nil}'
          schema:
            type: string
      summary: 创建组
      tags:
      - 组管理
    put:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/service.GroupUpdate'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新组信息
      tags:
      - 组管理
  /api/v1/group/{id}:
    delete:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 组ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "msg": "删除成功", "data": nil}'
          schema:
            type: string
      summary: 删除组
      tags:
      - 组管理
  /api/v1/group/permissions:
    put:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 权限名称
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/service.GroupUpdatePermission'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新组权限
      tags:
      - 组管理
  /api/v1/group/users:
    put:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/service.GroupUpdateUser'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新组用户
      tags:
      - 组管理
  /api/v1/groups:
    get:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      - description: 组名称
        in: query
        name: name
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取组列表
      tags:
      - 组管理
  /api/v1/menu/list:
    get:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取所菜单
      tags:
      - 组管理
  /api/v1/menus:
    get:
      description: 菜单关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取菜单列表
      tags:
      - 菜单管理
  /api/v1/oauth/token:
    post:
      description: OAuth2.0认证相关接口
      parameters:
      - description: 授权请求参数
        in: body
        name: authorize
        required: true
        schema:
          $ref: '#/definitions/service.Token'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ResponseToken'
      summary: 客户端认证
      tags:
      - OAuth2.0认证
  /api/v1/oauth/userinfo:
    get:
      description: OAuth2.0认证相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ResponseUserinfo'
      summary: 获取用户信息
      tags:
      - OAuth2.0认证
  /api/v1/path/list:
    get:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取所有接口
      tags:
      - 组管理
  /api/v1/paths:
    get:
      description: 接口相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      - description: 菜单名称
        in: query
        name: menu_name
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取接口列表（表格展示）
      tags:
      - 接口管理
  /api/v1/reset_password:
    post:
      description: 个人信息管理相关接口
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dao.UserPasswordUpdate'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功"}'
          schema:
            type: string
      summary: 密码更新
      tags:
      - 个人信息管理
  /api/v1/site:
    post:
      consumes:
      - application/json
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/service.SiteCreate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "msg": "创建成功", "data": nil}'
          schema:
            type: string
      summary: 创建站点
      tags:
      - 站点管理
    put:
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/dao.UpdateSite'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新站点信息
      tags:
      - 站点管理
  /api/v1/site/{id}:
    delete:
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分组ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "msg": "删除成功", "data": nil}'
          schema:
            type: string
      summary: 删除站点
      tags:
      - 站点管理
  /api/v1/site/group:
    post:
      consumes:
      - application/json
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/service.SiteGroupCreate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "msg": "创建成功", "data": nil}'
          schema:
            type: string
      summary: 创建分组
      tags:
      - 站点管理
    put:
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/service.SiteGroupUpdate'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新分组信息
      tags:
      - 站点管理
  /api/v1/site/group/{id}:
    delete:
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分组ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "msg": "删除成功", "data": nil}'
          schema:
            type: string
      summary: 删除站点分组
      tags:
      - 站点管理
  /api/v1/site/guide:
    get:
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取站点列表
      tags:
      - 站点管理
  /api/v1/site/logoUpload:
    post:
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 头像
        in: formData
        name: logo
        required: true
        type: file
      responses:
        "200":
          description: '{"code": 0, "path": logoPath}'
          schema:
            type: string
      summary: 站点图片上传
      tags:
      - 站点管理
  /api/v1/site/users:
    put:
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/service.SiteUserUpdate'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新站点用户
      tags:
      - 站点管理
  /api/v1/sites:
    get:
      description: 站点关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      - description: 站点名称
        in: query
        name: name
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取站点列表
      tags:
      - 站点管理
  /api/v1/sms/reset_password_code:
    post:
      consumes:
      - application/json
      description: 个人信息管理相关接口
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/service.RestPassword'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "msg": "校验码已发送..."}'
          schema:
            type: string
      summary: 获取验证码
      tags:
      - 个人信息管理
  /api/v1/sso/cas/authorize:
    post:
      description: CAS3.0认证相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 授权请求参数
        in: body
        name: authorize
        required: true
        schema:
          $ref: '#/definitions/service.CASAuthorize'
      responses:
        "200":
          description: '{"code": 0, "msg": 授权成功, "redirect_uri": redirect_uri}'
          schema:
            type: string
      summary: 客户端授权
      tags:
      - CAS3.0认证
  /api/v1/sso/oauth/authorize:
    post:
      description: OAuth2.0认证相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 授权请求参数
        in: body
        name: authorize
        required: true
        schema:
          $ref: '#/definitions/service.OAuthAuthorize'
      responses:
        "200":
          description: '{"code": 0, "msg": 授权成功, "redirect_uri": redirect_uri}'
          schema:
            type: string
      summary: 客户端授权
      tags:
      - OAuth2.0认证
  /api/v1/sso/saml/authorize:
    post:
      description: SAML2认证相关接口
      responses:
        "200":
          description: '{"code": 0, "data": nil}'
          schema:
            type: string
      summary: SP授权
      tags:
      - SAML2认证
  /api/v1/sso/saml/metadata:
    get:
      description: SAML2认证相关接口
      produces:
      - text/xml
      responses:
        "200":
          description: OK
      summary: 获取元数据
      tags:
      - SAML2认证
    post:
      consumes:
      - application/json
      description: SAML2认证相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 授权请求参数
        in: body
        name: url
        required: true
        schema:
          $ref: '#/definitions/service.ParseSPMetadata'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "data": nil}'
          schema:
            type: string
      summary: SP Metadata解析
      tags:
      - SAML2认证
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dao.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "msg": "创建成功", "data": nil}'
          schema:
            type: string
      summary: 创建用户
      tags:
      - 用户管理
    put:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dao.UserUpdate'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新用户信息
      tags:
      - 用户管理
  /api/v1/user/{id}:
    delete:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "msg": "删除成功", "data": nil}'
          schema:
            type: string
      summary: 删除用户
      tags:
      - 用户管理
  /api/v1/user/avatarUpload:
    post:
      description: 个人信息管理相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 头像
        in: formData
        name: avatar
        required: true
        type: file
      responses:
        "200":
          description: '{"code": 0, "data": nil}'
          schema:
            type: string
      summary: 头像上传
      tags:
      - 个人信息管理
  /api/v1/user/info:
    get:
      description: 用户认证相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": {}}'
          schema:
            type: string
      summary: 获取用户信息
      tags:
      - 用户认证
  /api/v1/user/list:
    get:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取用户列表（下拉框）
      tags:
      - 用户管理
  /api/v1/user/mfa_auth:
    post:
      description: 用户认证相关接口
      parameters:
      - description: MFA认证信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/service.MFAValidate'
      responses:
        "200":
          description: '{"code": 0, "token": "用户令牌"}'
          schema:
            type: string
      summary: MFA认证
      tags:
      - 用户认证
  /api/v1/user/mfa_qrcode:
    get:
      description: 用户认证相关接口
      parameters:
      - description: 用户认证通过后的Token
        in: query
        name: token
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "qrcode": ""}'
          schema:
            type: string
      summary: 获取MFA二维码
      tags:
      - 用户认证
  /api/v1/user/reset_mfa/{id}:
    put:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "msg": "重置成功", "data": nil}'
          schema:
            type: string
      summary: MFA重置
      tags:
      - 用户管理
  /api/v1/user/reset_password:
    put:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dao.UserPasswordUpdate'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 密码更新
      tags:
      - 用户管理
  /api/v1/user/sync/ad:
    post:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "msg": "同步成功"}'
          schema:
            type: string
      summary: AD域用户同步
      tags:
      - 用户管理
  /api/v1/users:
    get:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      - description: 用户姓名
        in: query
        name: name
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取查询的用户列表
      tags:
      - 用户管理
  /p3/serviceValidate:
    get:
      description: CAS3.0认证相关接口
      parameters:
      - description: 授权请求参数
        in: body
        name: authorize
        required: true
        schema:
          $ref: '#/definitions/service.CASServiceValidate'
      produces:
      - text/xml
      responses:
        "200":
          description: OK
      summary: 票据校验
      tags:
      - CAS3.0认证
swagger: "2.0"
