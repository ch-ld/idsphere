definitions:
  dao.UserPasswordUpdate:
    properties:
      id:
        type: integer
      password:
        type: string
      re_password:
        type: string
    required:
    - id
    - password
    - re_password
    type: object
  dao.UserUpdate:
    properties:
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      phone_number:
        type: string
    required:
    - id
    type: object
  service.GroupCreate:
    properties:
      is_role_group:
        default: false
        type: boolean
      name:
        type: string
    required:
    - name
    type: object
  service.GroupUpdate:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  service.GroupUpdatePermission:
    properties:
      id:
        type: integer
      menu_permissions:
        items:
          type: string
        type: array
      path_permissions:
        items:
          type: string
        type: array
    required:
    - id
    - menu_permissions
    - path_permissions
    type: object
  service.GroupUpdateUser:
    properties:
      id:
        type: integer
      users:
        items:
          type: integer
        type: array
    required:
    - id
    - users
    type: object
  service.UserCreate:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      user_from:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - phone_number
    - username
    type: object
  service.UserLogin:
    properties:
      ldap:
        type: boolean
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /api/v1/group:
    post:
      consumes:
      - application/json
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/service.GroupCreate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "msg": "创建成功", "data": nil}'
          schema:
            type: string
      summary: 创建组
      tags:
      - 组管理
    put:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 组信息
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/service.GroupUpdate'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新组信息
      tags:
      - 组管理
  /api/v1/group/{id}:
    delete:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 组ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "msg": "删除成功", "data": nil}'
          schema:
            type: string
      summary: 删除组
      tags:
      - 组管理
  /api/v1/group/permissions:
    put:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 权限名称
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/service.GroupUpdatePermission'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新组权限
      tags:
      - 组管理
  /api/v1/group/users:
    put:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/service.GroupUpdateUser'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新组用户
      tags:
      - 组管理
  /api/v1/groups:
    get:
      description: 组相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      - description: 组名称
        in: query
        name: name
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取组列表
      tags:
      - 组管理
  /api/v1/menu/list:
    get:
      description: 菜单关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取所有的菜单列表
      tags:
      - 菜单管理
  /api/v1/menus:
    get:
      description: 菜单关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取菜单列表
      tags:
      - 菜单管理
  /api/v1/path/list:
    get:
      description: 接口相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取所有接口（权限分配时选择）
      tags:
      - 接口管理
  /api/v1/paths:
    get:
      description: 接口相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      - description: 菜单名称
        in: query
        name: menu_name
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取接口列表（表格展示）
      tags:
      - 接口管理
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/service.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "msg": "创建成功", "data": nil}'
          schema:
            type: string
      summary: 创建用户
      tags:
      - 用户管理
    put:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dao.UserUpdate'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 更新用户信息
      tags:
      - 用户管理
  /api/v1/user/{id}:
    delete:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "msg": "删除成功", "data": nil}'
          schema:
            type: string
      summary: 删除用户
      tags:
      - 用户管理
  /api/v1/user/avatarUpload:
    post:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 头像
        in: formData
        name: avatar
        required: true
        type: file
      responses:
        "200":
          description: '{"code": 0, "data": nil}'
          schema:
            type: string
      summary: 头像上传
      tags:
      - 用户管理
  /api/v1/user/info:
    get:
      description: 认证相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": {}}'
          schema:
            type: string
      summary: 获取用户信息
      tags:
      - 用户认证
  /api/v1/user/list:
    get:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取所有的用户列表
      tags:
      - 用户管理
  /api/v1/user/reset_mfa/{id}:
    put:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 0, "msg": "重置成功", "data": nil}'
          schema:
            type: string
      summary: MFA重置
      tags:
      - 用户管理
  /api/v1/user/reset_password:
    put:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dao.UserPasswordUpdate'
      responses:
        "200":
          description: '{"code": 0, "msg": "更新成功", "data": nil}'
          schema:
            type: string
      summary: 密码更新
      tags:
      - 用户管理
  /api/v1/users:
    get:
      description: 用户相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分页
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: limit
        required: true
        type: integer
      - description: 用户姓名
        in: query
        name: name
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": []}'
          schema:
            type: string
      summary: 获取查询的用户列表
      tags:
      - 用户管理
  /login:
    post:
      consumes:
      - application/json
      description: 认证相关接口
      parameters:
      - description: 用户名密码
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/service.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code": 0, "token": "用户令牌"}'
          schema:
            type: string
      summary: 登录
      tags:
      - 用户认证
  /logout:
    post:
      description: 认证相关接口
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: '{"code": 0, "data": nil}'
          schema:
            type: string
      summary: 注销
      tags:
      - 用户认证
swagger: "2.0"
